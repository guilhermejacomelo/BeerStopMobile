package com.example.beerstopmobile;import android.content.ContentValues;import android.content.Context;import android.database.Cursor;import android.database.sqlite.SQLiteDatabase;import android.database.sqlite.SQLiteOpenHelper;import android.view.View;public class BDBeerStop extends SQLiteOpenHelper{    private static final String DATABASE_NAME = "BDBeerStop.db";    private static final int DATABASE_VERSION = 1;    public BDBeerStop(Context context) {        super(context, DATABASE_NAME, null, DATABASE_VERSION);    }    @Override    public void onCreate(SQLiteDatabase db) {        String createTableQuery = "CREATE TABLE clientes (" +                "id INTEGER PRIMARY KEY AUTOINCREMENT," +                "nome TEXT," +                "cpf TEXT," +                "telefone TEXT)";        db.execSQL(createTableQuery);        String createTableProdutosQuery = "CREATE TABLE IF NOT EXISTS produtos (" +                "id INTEGER PRIMARY KEY AUTOINCREMENT," +                "descricao TEXT," +                "quantidade INTEGER)";        db.execSQL(createTableProdutosQuery);    }    @Override    public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {        db.execSQL("DROP TABLE IF EXISTS clientes");        onCreate(db);    }    public long inserirCliente(String nome, String cpf, String telefone) {        SQLiteDatabase db = getWritableDatabase();        ContentValues values = new ContentValues();        values.put("nome", nome);        values.put("cpf", cpf);        values.put("telefone", telefone);        return db.insert("clientes", null, values);    }    public long inserirProduto(String descricao, int quantidade) {        SQLiteDatabase db = getWritableDatabase();        ContentValues values = new ContentValues();        values.put("descricao", descricao);        values.put("quantidade", quantidade);        return db.insert("produtos", null, values);    }    public Cursor obterClientes() {        SQLiteDatabase db = getReadableDatabase();        String[] columns = {"id", "nome", "cpf", "telefone"};        return db.query("clientes", columns, null, null, null, null, null);    }    public Cursor obterProdutos() {        SQLiteDatabase db = getReadableDatabase();        String[] columns = {"id", "descricao", "quantidade"};        return db.query("produtos", columns, null, null, null, null, null);    }    public Cursor obterDescricaoProdutoDaComanda(String nomeComanda) {        SQLiteDatabase db = this.getReadableDatabase();        String[] projection = { "descricao" };        String selection = "nome = ?";        String[] selectionArgs = { nomeComanda };        return db.query("produtos", projection, selection, selectionArgs, null, null, null);    }    public void inserirComanda(String nomeComanda, String descricaoProduto, int quantidadeProduto) {        SQLiteDatabase db = getWritableDatabase();        ContentValues values = new ContentValues();        values.put("nome", nomeComanda);        values.put("descricao", descricaoProduto);        values.put("quantidade", quantidadeProduto);        db.insert("comandas", null, values);    }}